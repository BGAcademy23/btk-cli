{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Visualising genome assembly cobionts by running BlobToolKit locally","text":"<p>This session is part of Biodiversity Genomics Academy 2023</p>"},{"location":"#session-leaders","title":"Session Leader(s)","text":"<p>Sujai Kumar Senior Bioinformatician and Training Coordinator</p> <p>Rich Challis Senior Bioinformatician</p> <p>Tree of Life Programme, Wellcome Sanger Institute</p>"},{"location":"#description","title":"Description","text":"<p>By the end of this session you will be able to:</p> <ol> <li>Install BlobToolKit (BTK) on your own system</li> <li>Starting from an assembly fasta file and a bam file with reads mapped to the assembly, you will be able to create a blobdir and view the BTK plot</li> </ol>"},{"location":"#session-materials","title":"Session Materials","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ol> <li>Familiarity with linux command line basics (<code>cd</code>, <code>mv</code>, <code>rm</code>, <code>wget</code>, <code>curl</code> etc)</li> <li>Understanding of genome assembly concepts such as DNA sequencing, and how short and long sequenced reads are assembled into contigs, scaffolds, and chromosomes</li> </ol> <p>Please make sure you MEET THE PREREQUISITES and READ THE DESCRIPTION above</p> <p>You will get the most out of this session if you meet the prerequisites above.</p> <p>Please also read the description carefully to see if this session is relevant to you.</p> <p>If you don't meet the prerequisites or change your mind based on the description or are no longer available at the session time, please email tol-training at sanger.ac.uk to cancel your slot so that someone else on the waitlist might attend.</p>"},{"location":"materials/","title":"Session Materials","text":""},{"location":"materials/#introduction-to-blobtoolkit","title":"Introduction to BlobToolKit","text":""},{"location":"materials/#demo-1","title":"Demo 1","text":"<p>Launch Gitpod Workspace</p> <p>When you launch the Gitpod workspace, these tasks have already been done for you:</p> <ol> <li>Conda/mamba has been installed</li> <li>BlobToolKit (BTK) viewer and api docker containers are already running with an example dataset</li> <li>/workspace/glClaSqua9 folder is ready with the assembly fasta file and mapped reads, blast hits, busco files, etc</li> </ol>"},{"location":"materials/#overview","title":"Overview","text":"<p>We are going to work with an initial PacBio HiFi genome assembly of a sample of Cladonia squamosa, the dragon cladonia lichen.</p> <ul> <li>Explore the Gitpod interface</li> <li>Explore the BTK viewer</li> <li>Explore the input files</li> <li>Install BTK command line tools</li> <li>Create a blobdir</li> <li>Add read depth data to the blobdir</li> <li>Add blast hits to the blobdir</li> <li>View the blobdir in the BTK viewer</li> </ul>"},{"location":"materials/#details","title":"Details","text":"<ul> <li> <p>Explore the Gitpod interface</p> <ul> <li>left: file browser</li> <li>top right: preview window / editor</li> <li>bottom right: linux terminal</li> </ul> </li> <li> <p>Explore the BTK viewer</p> <ul> <li>the plot represents contigs in a genome assembly</li> <li>each circle is a contig, the size is proportional to the length</li> <li>the X axis is GC content of contig</li> <li>the Y axis is the sequencing coverage or read depth of that contig</li> <li>the colours are best blast hits </li> </ul> </li> <li> <p>Explore the input files <pre><code>cd /workspace/glClaSqua9\n</code></pre>     Tip: use <code>less</code> to quickly check what large files contain</p> </li> <li> <p>Install BTK command line tools <pre><code>mamba create -n btk -c conda-forge python=3.9 -y\nmamba activate btk\npip install \"blobtoolkit[full]\"\n</code></pre>     You should see a bash prompt beginning with <code>[btk]</code>, and if you type <code>blobtools</code> you should see some help text <pre><code>blobtools\n</code></pre></p> </li> <li> <p>Create a blobdir</p> <p>The first step is to create a yaml file with some very minimal information. <pre><code>cd /workspace/glClaSqua9\ncode glClaSqua9.yaml\n</code></pre> In the text editor that opens top right, paste in this information and save it: <pre><code>assembly:\n  alias: glClaSqua9\n  record_type: contig\ntaxon:\n  name: Cladonia squamosa\n  taxid: 174074\n</code></pre> Now, run this command to create a new folder: glClaSqua9_blobdir <pre><code>blobtools create \\\n    --fasta glClaSqua9.fasta \\\n    --meta glClaSqua9.yaml \\\n    ./glClaSqua9_blobdir\n</code></pre> And take a look at the contents of glClaSqua9_blobdir</p> </li> <li> <p>Add read depth data to the blobdir</p> <p>To add the sequencing coverage or read depth for each contig from a bam file to the same blobdir: <pre><code>blobtools add \\\n    --cov ./precomputed/mapped_reads/glClaSqua9.m64174e.bam \\\n    --threads 8 \\\n    ./glClaSqua9_blobdir\n</code></pre></p> </li> <li> <p>Add blast hits to the blobdir</p> <p>We've now got the GC (X axis) and Cov (Y axis), so all we need is some way of colouring the contigs by their best hits to known databases. The precomputed/diamond folder has diamond blast hits in a tabular format, so we can add that.</p> <p>But this time we need one additional input - the NCBI taxonomy - because BTK needs it to extrapolate hits at different taxonomy levels (such as phylum, class, order, etc) <pre><code>mkdir ./taxdump\ncd    ./taxdump\nwget ftp://ftp.ncbi.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz\ntar -xzf new_taxdump.tar.gz\ncd ../\n</code></pre> Now we can add the diamond blast hits, telling BTK to get additional taxonomy information from this folder: <pre><code>blobtools add \\\n    --hits ./precomputed/diamond/glClaSqua9.diamond.busco_genes.out \\\n    --taxrule bestsumorder \\\n    --taxdump ./taxdump \\\n    ./glClaSqua9_blobdir\n</code></pre></p> </li> <li> <p>View the blobdir in the BTK viewer</p> <p>Move the blobdir into a folder that has all the blobdirs: <pre><code>cp -r glClaSqua9_blobdir /workspace/btk_example/src/data/example/\n</code></pre> Send an instruction to the BTK API to reload and reindex that folder: <pre><code>curl $(gp url 8000)/api/v1/search/reload/testkey\n</code></pre> Refresh the browser top right, and click on the new dataset: glClaSqua9_blobdir. By default, BTK viewer shows binned plots if there are more than 2000 contigs, so to get contigs plotted as circles, click on Settings &gt; shape &gt; circle</p> </li> </ul>"},{"location":"materials/#exercise","title":"Exercise","text":"<p>Add the other diamond blast hit file in <code>./precomputed/diamond/glClaSqua9.diamond.reference_proteomes.out</code>. Hint: change the <code>blobtools add --hits</code> command above by changing the input filename, and also change the taxrule to <code>--taxrule bestsumorder_blastx</code>. If you don't change the taxrule name, blobtools will assume you are referring to the same field, and will not overwrite it.</p> Solution <pre><code>cd /workspace/glClaSqua9\n\nblobtools add \\\n    --hits ./precomputed/diamond/glClaSqua9.diamond.reference_proteomes.out \\\n    --taxrule bestsumorder=bestsumorder_blastx \\\n    --taxdump ./taxdump \\\n    ./glClaSqua9_blobdir\n\ncp -r glClaSqua9_blobdir /workspace/btk_example/src/data/example/\n\ncurl $(gp url 8000)/api/v1/search/reload/testkey\n</code></pre>"},{"location":"materials/#demo-2","title":"Demo 2","text":"<p>You can add any categorical value to a contig, it does not have to be a blast hit.</p> <p>For example, the deep-learning based tool tiara can very rapidly estimate if a contig is a eukaryote, bacteria, or organelle.</p> <p>So, to very quickly assess if your eukaryotic genome assembly has bacteria in it, you could colour it using tiara. In this demo we install tiara, run tiara, and add the tiara categories to BTK.</p> <ul> <li> <p>Install tiara: <pre><code># mamba create -n tiara -c conda-forge tiara python=3.7 -y\nmamba activate  tiara\n</code></pre></p> </li> <li> <p>Run tiara: <pre><code>cd /workspace/glClaSqua9\n\ntiara -i glClaSqua9.fasta -o glClaSqua9.tiara -t 8 --pr --tf all -m 1000\n\nmamba deactivate\n</code></pre></p> </li> <li> <p>Add tiara results to blobdir: <pre><code>blobtools add \\\n    --text glClaSqua9.tiara \\\n    --text-delimiter \"\\t\" \\\n    --text-cols \"sequence_id=identifiers,class_fst_stage=tiara\" \\\n    --text-header \\\n    --key plot.cat=tiara \\\n    ./glClaSqua9_blobdir\n</code></pre></p> </li> <li>Copy the blobdir and update the BTK API <pre><code>    cp -r glClaSqua9_blobdir /workspace/btk_example/src/data/example/\n\n    curl $(gp url 8000)/api/v1/search/reload/testkey\n</code></pre></li> </ul>"},{"location":"materials/#demo-3","title":"Demo 3","text":"<p>We can add other file types as well:</p> <ul> <li> <p>BUSCO full_table.tsv <pre><code>blobtools add \\\n    --busco ./precomputed/busco/glClaSqua9.busco.eukaryota_odb10.full_table.tsv \\\n    --busco ./precomputed/busco/glClaSqua9.busco.fungi_odb10.full_table.tsv \\\n    ./glClaSqua9_blobdir\n</code></pre></p> </li> <li> <p>Numeric fields <pre><code>blobtools add \\\n    --bedtsvdir ./precomputed/window_stats/ \\\n    ./glClaSqua9_blobdir/\n</code></pre></p> </li> <li> <p>Copy the blobdir and update the BTK API <pre><code>    cp -r glClaSqua9_blobdir /workspace/btk_example/src/data/example/\n\n    curl $(gp url 8000)/api/v1/search/reload/testkey\n</code></pre></p> </li> </ul>"}]}